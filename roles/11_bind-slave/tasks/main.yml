---
- stat:
    path: "{{ namedfile_local_deb }}"
  register: namedconf_local_deb
  become: true
- name: Copie du modèle named.conf.local vers le serveur slave (Debian)
  template:
    src: "{{ src_namedfile_local_deb }}"
    dest: "{{ namedfile_local_deb }}"
    force: yes
  become: true
  when: namedconf_local_deb.stat.exists == False and ansible_os_family == 'Debian'

- stat:
    path: "{{ namedfile_centos }}"
  become: true
  register: namedconf_centos
- name: Copie du modèle named.conf vers le serveur master (CentOS)
  template:
    src: "{{ src_namedfile_centos }}"
    dest: "{{ namedfile_centos }}"
    force: yes
  become: true
  when: namedconf_centos.stat.exists == False and ansible_os_family == 'RedHat'

- stat:
    path: "{{ namedfile_local_centos }}"
  become: true
  register: namedconf_local_centos
- name: Copie du modèle named.conf.local vers le serveur master (CentOS)
  template:
    src: "{{ src_namedfile_local_centos }}"
    dest: "{{ namedfile_local_centos }}"
    force: yes
  become: true
  when: namedconf_local_centos.stat.exists == False and ansible_os_family == 'RedHat'

- name: "{{ bind_user }} devient compte de service (Debian)"
  file:
    path: "{{ bind_dir }}"
    recurse: yes
    mode: "{{ umask }}"
    owner: "{{ bind_user }}"
    group: "{{ bind_group }}"
  become: true
  when: ansible_os_family == 'Debian'

- name: Parse le fichier de configuration {{ namedfile_local_deb }}  (Debian)
  shell: |
    named-checkconf {{ namedfile_local_deb }}
  become: true
  register: resultat_bind_deb
  failed_when: false
  when: ansible_os_family == 'Debian'

- name:  Résultat du parsage du fichier de configuration (Debian)
  when: "ansible_os_family == 'Debian' and resultat_bind_deb.stdout.find('{{ namedfile_local_deb }}') < 1"
  debug:
    msg: "Le fichier de configuration {{ namedfile_local_deb }} est correctement parsé"

- name: Redémarre le service bind (Debian)
  shell: sleep 3; systemctl restart bind9
  async: 1
  poll: 0
  become: true
  when: ansible_os_family == 'Debian'

- name: "{{ named_user }} devient compte de service (CentOS)"
  shell: |
    chown -R {{ named_user }}:{{ named_group }} {{ named_dir }}
    chmod -R 0750 {{ named_dir }}
    chown  {{ named_user }}:{{ named_group }} {{ namedfile_local_centos }}
    chmod  750 {{ namedfile_local_centos }}
    chown  {{ named_user }}:{{ named_group }} {{ namedfile_centos }}
    chmod  750 {{ namedfile_centos }}
  become: true
  with_items: "{{ named_dir }}"
  when: ansible_os_family == 'RedHat'

- name: Desactive SELinux (CentOS)
  command: setenforce 0
  become: true
  when: ansible_os_family == 'RedHat'

- name: Parse le fichier de configuration {{ namedfile_centos }}  (CentOS)
  shell: |
    named-checkconf {{ namedfile_centos }};
    named-checkconf {{ namedfile_local_centos }}
  become: true
  register: resultat_bind_centos
  failed_when: false
  when: ansible_os_family == 'RedHat'

- name:  Résultat du parsage des fichiers de configuration (CentOS)
  when: "ansible_os_family == 'RedHat' and resultat_bind_centos.stdout.find('{{ named_parse }}') < 1"
  debug:
    msg: "Les fichiers de configuration {{ namedfile_centos }} et {{ namedfile_local_centos }} sont correctement parsés"

- name: Active puis démarre le service named (CentOS)
  shell: sleep 3; systemctl enable named; sleep 3; systemctl start named
  async: 1
  poll: 0
  become: true
  when: ansible_os_family == 'RedHat'
